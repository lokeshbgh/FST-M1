<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="03c084ee-d165-4a08-88ae-599c379e91a0" created="3.57.0" activeEnvironment="Default environment" encryptionMode="Not encrypted" name="FST REST Activity 4" resourceRoot="" projectVersion="" updated="3.57.0 2024-12-10T10:59:20Z" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="f26aae40-872b-4ce9-847c-7bf08257ad2f" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://ipwhois.app" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings id="c88dd751-4257-4f77-9745-f8d597397810"/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://ipwhois.app</con:endpoint></con:endpoints><con:resource name="IP" path="/json/{IP}" id="b3b127ae-1c3a-4833-9fc5-4053e8a05b8a"><con:settings/><con:parameters/><con:method name="IP" id="22e86875-ffa1-40be-851d-8fe6b840ba93" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>IP</con:name><con:value>IP</con:value><con:style>TEMPLATE</con:style><con:default>IP</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ns="http://ipwhois.app/json/66.12.25.226">ns:Response</con:element></con:representation><con:request name="Request 1" id="8907f14b-a6a0-4369-805f-e1f00ed97825" mediaType="application/json"><con:settings/><con:endpoint>http://ipwhois.app</con:endpoint><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:parameters><con:entry key="IP" value="IP"/></con:parameters><con:parameterOrder><con:entry>IP</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite id="c7f87427-7cac-4b7f-b2c4-b34a9e135e80" name="http://ipwhois.app Test Suite"><con:settings id="c90d51a3-a1cc-4ed3-912e-6320970cc0b4"/><con:runType>SEQUENTIAL</con:runType><con:testCase id="5794a482-0d87-4618-b09a-977b2d8c7a19" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="http://ipwhois.app Test Case 1" searchProperties="true" timeout="0"><con:settings/><con:testStep type="datasource" name="Data Source" id="eb7f9287-ce5c-485a-babb-d029e2e3ad40"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="File"><con:configuration><fileName>C:/Users/002B1S744/Documents/My_Certifications/FullStack/ReadyAPI_Proj/DataDrivenText.txt</fileName><separator>,</separator><trim>true</trim><charset>Cp1252</charset><quotedValues>false</quotedValues></con:configuration></con:dataSource><con:shared>true</con:shared><con:restartShared>true</con:restartShared><con:property>ip</con:property><con:restartOnRun>true</con:restartOnRun><con:stopDatasourceExhausted>false</con:stopDatasourceExhausted></con:config></con:testStep><con:testStep type="restrequest" name="Request 1" id="1fbe8bb0-d5ad-4440-995e-9c45e27b3f0b"><con:settings/><con:config service="http://ipwhois.app" resourcePath="/json/{IP}" methodName="IP" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request 1" id="8907f14b-a6a0-4369-805f-e1f00ed97825" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://ipwhois.app</con:endpoint><con:request/><con:originalUri>http://ipwhois.app/json/66.12.25.226</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="7f4fc7a3-6ebf-47ec-9ba7-f97e08060e7d" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8d001266-290e-4eba-82fd-da294e0d5c92" name="JSONPath Match"><con:configuration><path>$['country']</path><content>${Request 1#Response#$['country']}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:entry key="IP" value="${Data Source#ip}"/></con:parameters><con:parameterOrder><con:entry>IP</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="datasourceloop" name="Data Source Loop" id="0336dbe5-1222-4ab0-9762-ca9220d9d0e9"><con:settings/><con:config><dataSourceStep>Data Source</dataSourceStep><targetStep>Request 1</targetStep><discardResults>false</discardResults></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:requirements/><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:jmsConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest"><con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script></con:eventHandlers><con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep"><con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script></con:eventHandlers><con:authRepository/><con:tags/></con:soapui-project>